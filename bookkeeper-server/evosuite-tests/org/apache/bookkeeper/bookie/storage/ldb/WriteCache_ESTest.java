/*
 * This file was automatically generated by EvoSuite
 * Sun Jun 08 16:59:09 GMT 2025
 */

package org.apache.bookkeeper.bookie.storage.ldb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.ByteBufAllocator;
import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.buffer.UnpooledByteBufAllocator;
import io.netty.buffer.UnpooledUnsafeDirectByteBuf;
import org.apache.bookkeeper.bookie.storage.ldb.WriteCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WriteCache_ESTest extends WriteCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WriteCache writeCache0 = null;
      try {
        writeCache0 = new WriteCache((ByteBufAllocator) null, (-2289), (-2289));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L, 4);
      assertEquals(0L, writeCache0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = WriteCache.align64((-5));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = WriteCache.align64((-846));
      assertEquals((-832), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = new WriteCache(pooledByteBufAllocator0, 0L);
      // Undeclared exception!
      try { 
        writeCache0.get((-3274L), (-3274L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Keys and values must be >= 0
         //
         verifyException("org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = null;
      try {
        writeCache0 = new WriteCache(pooledByteBufAllocator0, (-2959L), 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.storage.ldb.WriteCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 64, 64);
      assertEquals(0L, writeCache0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = null;
      try {
        writeCache0 = new WriteCache(pooledByteBufAllocator0, (-4294967297L));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.storage.ldb.WriteCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = null;
      try {
        writeCache0 = new WriteCache(pooledByteBufAllocator0, (-9L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialCapacity : -9 (expected: >= 0)
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = new WriteCache(pooledByteBufAllocator0, 0L);
      boolean boolean0 = writeCache0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L);
      ByteBuf byteBuf0 = writeCache0.getLastEntry(0L);
      assertNull(byteBuf0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L);
      boolean boolean0 = writeCache0.hasEntry(0L, (-1590L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L);
      ByteBuf byteBuf0 = writeCache0.get(0L, 0L);
      assertNull(byteBuf0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = UnpooledByteBufAllocator.DEFAULT;
      CompositeByteBuf compositeByteBuf0 = unpooledByteBufAllocator0.compositeDirectBuffer();
      writeCache0.put(1761L, 0L, compositeByteBuf0);
      // Undeclared exception!
      try { 
        writeCache0.getLastEntry(1761L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.storage.ldb.WriteCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = new WriteCache(pooledByteBufAllocator0, 1073741824L);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = new WriteCache(pooledByteBufAllocator0, 0L);
      writeCache0.deleteLedger(0L);
      assertEquals(0L, writeCache0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L);
      writeCache0.count();
      assertTrue(writeCache0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WriteCache writeCache0 = new WriteCache((ByteBufAllocator) null, 0L);
      WriteCache.EntryConsumer writeCache_EntryConsumer0 = mock(WriteCache.EntryConsumer.class, new ViolatedAssumptionAnswer());
      writeCache0.forEach(writeCache_EntryConsumer0);
      WriteCache.EntryConsumer writeCache_EntryConsumer1 = mock(WriteCache.EntryConsumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      writeCache0.forEach(writeCache_EntryConsumer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      WriteCache writeCache0 = new WriteCache(pooledByteBufAllocator0, 0L);
      UnpooledUnsafeDirectByteBuf unpooledUnsafeDirectByteBuf0 = new UnpooledUnsafeDirectByteBuf(pooledByteBufAllocator0, 2171, 2627);
      ByteBuf byteBuf0 = unpooledUnsafeDirectByteBuf0.writeZero(2171);
      writeCache0.put((-1365L), 0L, byteBuf0);
      assertTrue(writeCache0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WriteCache writeCache0 = null;
      try {
        writeCache0 = new WriteCache((ByteBufAllocator) null, 1L, 127);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max segment size needs to be in form of 2^n
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WriteCache writeCache0 = null;
      try {
        writeCache0 = new WriteCache((ByteBufAllocator) null, (-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = WriteCache.align64(4745);
      assertEquals(4800, int0);
  }
}
